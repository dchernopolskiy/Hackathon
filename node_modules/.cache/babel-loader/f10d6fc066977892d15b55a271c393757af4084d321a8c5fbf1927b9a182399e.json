{"ast":null,"code":"const mongoose = require('mongoose');\n\n// User Schema\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  firstName: String,\n  lastName: String,\n  bio: String,\n  profilePicture: String,\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n});\n\n// Hack Schema\nconst hackSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  videoUrl: String,\n  images: [String],\n  track: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Track',\n    required: true\n  },\n  collaborators: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  upvotes: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'User'\n  }],\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n});\n\n// Track Schema\nconst trackSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  description: String,\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  }\n});\nconst User = mongoose.model('User', userSchema);\nconst Hack = mongoose.model('Hack', hackSchema);\nconst Track = mongoose.model('Track', trackSchema);\nmodule.exports = {\n  User,\n  Hack,\n  Track\n};","map":{"version":3,"names":["mongoose","require","userSchema","Schema","username","type","String","required","unique","email","password","firstName","lastName","bio","profilePicture","createdAt","Date","default","now","updatedAt","hackSchema","title","description","videoUrl","images","track","Types","ObjectId","ref","collaborators","upvotes","trackSchema","name","User","model","Hack","Track","module","exports"],"sources":["/Users/dan/Documents/Projects/Hackathon/Hackathon/src/models.js"],"sourcesContent":["const mongoose = require('mongoose');\n\n// User Schema\nconst userSchema = new mongoose.Schema({\n  username: { type: String, required: true, unique: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  firstName: String,\n  lastName: String,\n  bio: String,\n  profilePicture: String,\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now }\n});\n\n// Hack Schema\nconst hackSchema = new mongoose.Schema({\n  title: { type: String, required: true },\n  description: { type: String, required: true },\n  videoUrl: String,\n  images: [String],\n  track: { type: mongoose.Schema.Types.ObjectId, ref: 'Track', required: true },\n  collaborators: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],\n  upvotes: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now }\n});\n\n// Track Schema\nconst trackSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  description: String,\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now }\n});\n\nconst User = mongoose.model('User', userSchema);\nconst Hack = mongoose.model('Hack', hackSchema);\nconst Track = mongoose.model('Track', trackSchema);\n\nmodule.exports = { User, Hack, Track };"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEpC;AACA,MAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACrCC,QAAQ,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC;EACxDC,KAAK,EAAE;IAAEJ,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC;EACrDE,QAAQ,EAAE;IAAEL,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC1CI,SAAS,EAAEL,MAAM;EACjBM,QAAQ,EAAEN,MAAM;EAChBO,GAAG,EAAEP,MAAM;EACXQ,cAAc,EAAER,MAAM;EACtBS,SAAS,EAAE;IAAEV,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EAC5CC,SAAS,EAAE;IAAEd,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI;AAC7C,CAAC,CAAC;;AAEF;AACA,MAAME,UAAU,GAAG,IAAIpB,QAAQ,CAACG,MAAM,CAAC;EACrCkB,KAAK,EAAE;IAAEhB,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACvCe,WAAW,EAAE;IAAEjB,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC7CgB,QAAQ,EAAEjB,MAAM;EAChBkB,MAAM,EAAE,CAAClB,MAAM,CAAC;EAChBmB,KAAK,EAAE;IAAEpB,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACuB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE,OAAO;IAAErB,QAAQ,EAAE;EAAK,CAAC;EAC7EsB,aAAa,EAAE,CAAC;IAAExB,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACuB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAO,CAAC,CAAC;EACtEE,OAAO,EAAE,CAAC;IAAEzB,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACuB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAO,CAAC,CAAC;EAChEb,SAAS,EAAE;IAAEV,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EAC5CC,SAAS,EAAE;IAAEd,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI;AAC7C,CAAC,CAAC;;AAEF;AACA,MAAMa,WAAW,GAAG,IAAI/B,QAAQ,CAACG,MAAM,CAAC;EACtC6B,IAAI,EAAE;IAAE3B,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACtCe,WAAW,EAAEhB,MAAM;EACnBS,SAAS,EAAE;IAAEV,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EAC5CC,SAAS,EAAE;IAAEd,IAAI,EAAEW,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI;AAC7C,CAAC,CAAC;AAEF,MAAMe,IAAI,GAAGjC,QAAQ,CAACkC,KAAK,CAAC,MAAM,EAAEhC,UAAU,CAAC;AAC/C,MAAMiC,IAAI,GAAGnC,QAAQ,CAACkC,KAAK,CAAC,MAAM,EAAEd,UAAU,CAAC;AAC/C,MAAMgB,KAAK,GAAGpC,QAAQ,CAACkC,KAAK,CAAC,OAAO,EAAEH,WAAW,CAAC;AAElDM,MAAM,CAACC,OAAO,GAAG;EAAEL,IAAI;EAAEE,IAAI;EAAEC;AAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}